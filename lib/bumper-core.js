// Generated by CoffeeScript 1.9.0

/*
 * * bumper core
 * * https://github.com/brewster1134/bumper
 * *
 * * @version 2.0.3
 * * @author Ryan Brewster
 * * Copyright (c) 2014
 * * Licensed under the MIT license.
 */

(function() {
  (function(root, factory) {
    if (typeof define === 'function' && define.amd) {
      return define([], function() {
        return factory();
      });
    } else {
      return factory();
    }
  })(this, function() {
    var BumperCore, _base;
    BumperCore = (function() {
      function BumperCore() {}

      BumperCore.prototype.events = function() {
        window.onload = (function(_this) {
          return function() {
            return _this.process();
          };
        })(this);
        window.addEventListener('bumper-responsive-breakpoint-change', (function(_this) {
          return function() {
            return _this.process();
          };
        })(this));
        return window.onresize = requestAnimationFrame(function() {
          var _ref, _ref1;
          return (_ref = window.Bumper.Responsive) != null ? (_ref1 = _ref.Breakpoint) != null ? _ref1.checkBreakpointChange() : void 0 : void 0;
        });
      };

      BumperCore.prototype.watch = function() {
        var responsiveObserver;
        responsiveObserver = new MutationObserver(function(mutations) {
          var mutation, node, _i, _j, _len, _len1, _ref;
          for (_i = 0, _len = mutations.length; _i < _len; _i++) {
            mutation = mutations[_i];
            _ref = mutation.addedNodes;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              node = _ref[_j];
              if (typeof node.className !== 'string') {
                return;
              }
              switch (false) {
                case !(node.className.indexOf('bumper-responsive-image') > -1):
                  window.Bumper.Responsive.Image.resize(node);
              }
            }
          }
        });
        return responsiveObserver.observe(document, {
          childList: true,
          subtree: true
        });
      };

      BumperCore.prototype.process = function() {
        var image, images, _i, _len, _results;
        images = document.querySelectorAll('.bumper-responsive-image');
        _results = [];
        for (_i = 0, _len = images.length; _i < _len; _i++) {
          image = images[_i];
          _results.push(window.Bumper.Responsive.Image.resize(image));
        }
        return _results;
      };

      BumperCore.prototype.getUrl = function(el, breakpoint) {
        var fullUrl, params, url;
        url = el.getAttribute("data-bumper-responsive-image-url-" + breakpoint) || el.getAttribute('data-bumper-responsive-image-url');
        params = el.getAttribute("data-bumper-responsive-image-url-params-" + breakpoint) || el.getAttribute('data-bumper-responsive-image-url-params');
        if (!url) {
          throw "data-bumper-responsive-image-url[-" + breakpoint + "] is not set.";
        }
        fullUrl = params ? url + "?" + params : url;
        if (fullUrl.indexOf('{') > -1) {
          if (window.Bumper.Dom) {
            fullUrl = window.Bumper.Dom.interpolateElementAttrs(fullUrl, el);
          } else {
            if (el.className.indexOf('bumper-responsive-image-delay' === -1)) {
              el.className = el.className + " bumper-responsive-image-delay";
            }
            return;
          }
        }
        return fullUrl;
      };

      return BumperCore;

    })();
    window.Bumper || (window.Bumper = {});
    return (_base = window.Bumper).Core || (_base.Core = new BumperCore);
  });

}).call(this);
