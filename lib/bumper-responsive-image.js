// Generated by CoffeeScript 1.9.0

/*
 * * bumper | responsive | image
 * * https://github.com/brewster1134/bumper
 * *
 * * @version 2.0.1
 * * @author Ryan Brewster
 * * Copyright (c) 2014
 * * Licensed under the MIT license.
 */

(function() {
  (function(root, factory) {
    if (typeof define === 'function' && define.amd) {
      return define(['bumper-core', 'bumper-responsive-breakpoint'], function() {
        return factory();
      });
    } else {
      return factory();
    }
  })(this, function() {
    var BumperResponsiveImage, _base, _base1;
    BumperResponsiveImage = (function() {
      function BumperResponsiveImage() {}

      BumperResponsiveImage.prototype.resize = function(el, breakpoint) {
        var fullUrl, img;
        if (el.jquery) {
          el = el[0];
        }
        breakpoint || (breakpoint = window.Bumper.Responsive.Breakpoint.getCurrent());
        fullUrl = window.Bumper.Core.getUrl(el, breakpoint);
        if (!fullUrl) {
          return;
        }
        if (el.tagName === 'IMG') {
          img = el;
          img.addEventListener('load', function() {
            var event;
            event = new CustomEvent('bumper-responsive-image-loaded');
            return img.dispatchEvent(event);
          });
          img.setAttribute('data-bumper-breakpoint', breakpoint);
          img.setAttribute('src', fullUrl);
        } else {
          img = document.createElement('img');
          img.addEventListener('load', function() {
            var event, src;
            src = this.getAttribute('src');
            el.setAttribute('data-bumper-breakpoint', breakpoint);
            el.style.backgroundImage = "url(" + src + ")";
            event = new CustomEvent('bumper-responsive-image-loaded', {
              detail: {
                img: img
              }
            });
            return el.dispatchEvent(event);
          });
          img.setAttribute('src', fullUrl);
        }
        return fullUrl;
      };

      return BumperResponsiveImage;

    })();
    window.Bumper || (window.Bumper = {});
    (_base = window.Bumper).Responsive || (_base.Responsive = {});
    return (_base1 = window.Bumper.Responsive).Image || (_base1.Image = new BumperResponsiveImage);
  });

}).call(this);
