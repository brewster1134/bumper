// Generated by CoffeeScript 1.7.1

/*
 * * bumper | responsive | backgroundimage
 * * https://github.com/brewster1134/bumper
 * *
 * * @version 0.1.0
 * * @author Ryan Brewster
 * * Copyright (c) 2014
 * * Licensed under the MIT license.
 */

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  (function(root, factory) {
    if (typeof define === 'function' && define.amd) {
      return define(['jquery', 'bumper-core'], function($, BumperCore) {
        return factory($, BumperCore);
      });
    } else {
      return root.Bumper.Responsive.BackgroundImage = factory(jQuery, root.Bumper.Core);
    }
  })(this, function($, BumperCore) {
    var BumperResponsiveBackgroundImage;
    BumperResponsiveBackgroundImage = (function(_super) {
      __extends(BumperResponsiveBackgroundImage, _super);

      function BumperResponsiveBackgroundImage() {
        return BumperResponsiveBackgroundImage.__super__.constructor.apply(this, arguments);
      }

      BumperResponsiveBackgroundImage.prototype.resize = function($el, breakpoint) {
        var $img, bpParams, defaultParams, params, src, url;
        url = $el.attr("data-bumper-responsive-backgroundimage-url-" + breakpoint) || $el.attr('data-bumper-responsive-backgroundimage-url');
        if (!url) {
          console.warn("data-bumper-responsive-backgroundimage-url[-" + breakpoint + "] is not set.", $el);
          return;
        }
        defaultParams = $el.attr('data-bumper-responsive-backgroundimage-url-params');
        bpParams = $el.attr("data-bumper-responsive-backgroundimage-url-params-" + breakpoint);
        params = this.combineParams(defaultParams, bpParams);
        src = this.interpolateElementAttrs("" + url + params);
        $img = $('<img/>');
        $img.load(function() {
          $el.attr('data-bumper-breakpoint', breakpoint);
          $el.css({
            backgroundImage: "url(" + ($(this).attr('src')) + ")"
          });
          return $el.trigger('bumper.responsive.backgroundimage.loaded');
        });
        return $img.attr('src', src);
      };

      BumperResponsiveBackgroundImage.prototype.resizeAll = function(breakpoint) {
        var _this;
        _this = this;
        return $('.bumper-responsive-backgroundimage').each(function() {
          return _this.resize($(this), breakpoint);
        });
      };

      return BumperResponsiveBackgroundImage;

    })(BumperCore);
    return new BumperResponsiveBackgroundImage;
  });

}).call(this);
